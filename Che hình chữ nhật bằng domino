Đầu vào



Dòng đầu tiên là số lượng test case T (T < = 50).



Mỗi bộ test sẽ được viết trên 7 dòng, mỗi dòng có 8 số cách nhau bởi khoảng trắng là bảng ghi bộ test. Nó có một dòng trống giữa 2 trường hợp thử nghiệm.



đầu ra



In mỗi test case trên một dòng, dòng đầu tiên là "#x", trong đó x là số test case, cách nhau bởi khoảng trắng và các số theo cách khác nhau để che bảng.
5
6 1 6 5 3 2 5 0
6 6 0 1 6 0 4 4
2 2 3 6 5 5 1 5
1 2 0 4 4 3 4 2
5 2 1 1 4 1 3 0
3 3 0 2 3 5 2 6
1 3 4 6 4 5 0 0

6 6 6 0 1 4 6 3
2 5 3 3 3 5 5 4
0 0 4 3 3 1 2 4
4 4 2 0 5 5 3 0
0 1 2 2 6 1 2 1
4 6 2 6 5 6 0 4
5 0 5 1 1 1 2 3

2 4 0 2 6 6 4 1
4 5 6 0 3 5 5 6
0 1 6 3 4 3 3 2
0 3 1 1 5 1 3 1
2 5 0 0 6 2 3 3
4 0 6 4 5 0 5 5
2 1 4 4 2 2 6 1

0 5 4 4 2 5 6 2
3 5 1 1 1 0 4 1
3 1 5 1 4 3 1 6
2 0 6 4 5 5 5 6
3 3 3 0 2 3 2 1
0 0 6 0 6 3 4 5
4 2 6 6 0 4 2 2

3 0 6 5 6 4 1 0
3 5 1 3 1 1 0 2
4 4 5 4 3 3 3 2
5 5 1 4 5 1 6 0
5 0 2 2 2 1 6 3
3 4 0 0 6 6 2 5
1 6 4 2 0 4 6 2
#include <iostream>
using namespace std;
bool domino[10][10],board[10][10];
int M[10][10],result;
int dx[2]={0,1};
int dy[2]={1,0};
bool checkvalue()
{
	for(int i=0;i<7;i++)
	{
		for(int j=0;j<8;j++)
		{
			if(board[i][j] == false)
			{
				return false;
			}
		}
	}
	return true;
}
void backtrack(int k)
{
		if(k==56)
		{
			if(checkvalue)
			{
				result++;
			}
			return ;
		}
		int x=k/8;
		int y=k%8;
		if(!board[x][y])
		{
			for(int i=0;i<2;i++)
			{
				int aa=x+dx[i];
				int bb=y+dy[i];
				if(aa>=0&& aa<7 && bb>=0 && bb<8 && !board[aa][bb] && !domino[M[x][y]][M[aa][bb]]  )
				{
					board[x][y]=true;
					board[aa][bb]=true;
					domino[M[x][y]][M[aa][bb]]=true;
					domino[M[aa][bb]][M[x][y]]=true;
					backtrack(k+1);
					board[aa][bb]=false;
					domino[M[x][y]][M[aa][bb]]=false;
					domino[M[aa][bb]][M[x][y]]=false;
					board[x][y]=false;
				}
			}
		}else
		{
			backtrack(k+1);
		}
}
int main()
{
	freopen("input.txt","r",stdin);
	int t;
	cin>>t;
	for(int tc=1;tc<=t;tc++)
	{
		for(int i=0;i<7;i++)
		{
			for(int j=0;j<8;j++)
			{
				cin>>M[i][j];
				board[i][j]=false;
				domino[i][j]=false;
				//cout<<M[i][j]<<" ";
			}
			//cout<<"\n";
		}
		result=0;
		backtrack(0);
		cout<<"#"<<tc<<" "<<result<<endl;
	}
	return 0;
}
